--- a/arch/mips/ar7/platform.c	2010-01-25 16:11:24.000000000 +0800
+++ b/arch/mips/ar7/platform.c	2010-01-13 14:46:16.000000000 +0800
@@ -677,24 +677,32 @@
 	}
 
 	if (ar7_has_high_cpmac()) {
-		res = fixed_phy_add(PHY_POLL, cpmac_high.id, &fixed_phy_status);
+		res = fixed_phy_add(PHY_POLL, ar7_is_titan()?cpmac_high_titan.id: cpmac_high.id, &fixed_phy_status);
 		if (res && res != -ENODEV)
 			return res;
 
-		cpmac_get_mac(1, cpmac_high_data.dev_addr);
-		res = platform_device_register(&cpmac_high);
+		cpmac_get_mac(1, ar7_is_titan() ? cpmac_high_data_titan.dev_addr:
+			cpmac_high_data.dev_addr);
+		res = platform_device_register(ar7_is_titan() ? &cpmac_high_titan :
+			&cpmac_high);
 		if (res)
 			return res;
 	} else {
-		cpmac_low_data.phy_mask = 0xffffffff;
-	}
+		if (ar7_is_titan())
+			cpmac_low_data_titan.phy_mask = 0xffffffff;
+		else
+			cpmac_low_data.phy_mask = 0xffffffff;
+ 	}
 
-	res = fixed_phy_add(PHY_POLL, cpmac_low.id, &fixed_phy_status);
+	res = fixed_phy_add(PHY_POLL, ar7_is_titan()?cpmac_low_titan.id:
+		cpmac_low.id, &fixed_phy_status);
 	if (res && res != -ENODEV)
 		return res;
 
-	cpmac_get_mac(0, cpmac_low_data.dev_addr);
-	res = platform_device_register(&cpmac_low);
+	cpmac_get_mac(0, ar7_is_titan() ? cpmac_low_data_titan.dev_addr :
+		cpmac_low_data.dev_addr);
+	res = platform_device_register(ar7_is_titan() ? &cpmac_low_titan :
+		&cpmac_low);
 	if (res)
 		return res;
 
--- a/drivers/net/cpmac.c	2010-01-25 16:11:24.000000000 +0800
+++ b/drivers/net/cpmac.c	2010-01-25 16:48:02.000000000 +0800
@@ -1141,6 +1141,8 @@
 		goto fail;
 	}
 
+	ar7_device_reset(pdata->reset_bit);
+
 	dev->irq = platform_get_irq_byname(pdev, "irq");
 
 	dev->open               = cpmac_open;
@@ -1221,7 +1223,7 @@
 	cpmac_mii->reset = cpmac_mdio_reset;
 	cpmac_mii->irq = mii_irqs;
 
-	cpmac_mii->priv = ioremap(AR7_REGS_MDIO, 256);
+	cpmac_mii->priv = ioremap(ar7_is_titan()?TITAN_REGS_MDIO:AR7_REGS_MDIO, 256);
 
 	if (!cpmac_mii->priv) {
 		printk(KERN_ERR "Can't ioremap mdio registers\n");
@@ -1232,9 +1234,10 @@
 #warning FIXME: unhardcode gpio&reset bits
 	ar7_gpio_disable(26);
 	ar7_gpio_disable(27);
-	ar7_device_reset(AR7_RESET_BIT_CPMAC_LO);
-	ar7_device_reset(AR7_RESET_BIT_CPMAC_HI);
 	ar7_device_reset(AR7_RESET_BIT_EPHY);
+	if (ar7_is_titan()) {
+		ar7_device_reset(TITAN_RESET_BIT_EPHY1);
+	}
 
 	cpmac_mii->reset(cpmac_mii);
 
