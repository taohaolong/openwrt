From 8d2a7d1fb561c9cb098c2b13ded34fe0f49dcca5 Mon Sep 17 00:00:00 2001
From: John Crispin <blogic@openwrt.org>
Date: Fri, 3 Aug 2012 10:27:25 +0200
Subject: [PATCH 20/25] owrt atm

---
 arch/mips/lantiq/irq.c |    2 ++
 arch/mips/mm/cache.c   |    2 ++
 net/atm/common.c       |    6 ++++++
 net/atm/proc.c         |    2 +-
 4 files changed, 11 insertions(+), 1 deletions(-)

Index: linux-3.6.6/arch/mips/lantiq/irq.c
===================================================================
--- linux-3.6.6.orig/arch/mips/lantiq/irq.c	2012-11-08 23:08:47.000000000 +0100
+++ linux-3.6.6/arch/mips/lantiq/irq.c	2012-11-08 23:10:32.023843184 +0100
@@ -14,6 +14,7 @@
 #include <linux/of_platform.h>
 #include <linux/of_address.h>
 #include <linux/of_irq.h>
+#include <linux/module.h>
 
 #include <asm/bootinfo.h>
 #include <asm/irq_cpu.h>
@@ -107,6 +108,7 @@
 	ltq_icu_w32(im, ltq_icu_r32(im, ier) & ~BIT(offset), ier);
 	ltq_icu_w32(im, BIT(offset), isr);
 }
+EXPORT_SYMBOL(ltq_mask_and_ack_irq);
 
 static void ltq_ack_irq(struct irq_data *d)
 {
Index: linux-3.6.6/arch/mips/mm/cache.c
===================================================================
--- linux-3.6.6.orig/arch/mips/mm/cache.c	2012-11-08 23:08:45.000000000 +0100
+++ linux-3.6.6/arch/mips/mm/cache.c	2012-11-08 23:09:41.155841939 +0100
@@ -58,6 +58,8 @@
 void (*_dma_cache_inv)(unsigned long start, unsigned long size);
 
 EXPORT_SYMBOL(_dma_cache_wback_inv);
+EXPORT_SYMBOL(_dma_cache_wback);
+EXPORT_SYMBOL(_dma_cache_inv);
 
 #endif /* CONFIG_DMA_NONCOHERENT */
 
Index: linux-3.6.6/net/atm/common.c
===================================================================
--- linux-3.6.6.orig/net/atm/common.c	2012-11-05 09:57:06.000000000 +0100
+++ linux-3.6.6/net/atm/common.c	2012-11-08 23:09:41.155841939 +0100
@@ -62,11 +62,17 @@
 	write_unlock_irq(&vcc_sklist_lock);
 }
 
+struct sk_buff* (*ifx_atm_alloc_tx)(struct atm_vcc *, unsigned int) = NULL;
+EXPORT_SYMBOL(ifx_atm_alloc_tx);
+
 static struct sk_buff *alloc_tx(struct atm_vcc *vcc, unsigned int size)
 {
 	struct sk_buff *skb;
 	struct sock *sk = sk_atm(vcc);
 
+	if (ifx_atm_alloc_tx != NULL)
+		return ifx_atm_alloc_tx(vcc, size);
+
 	if (sk_wmem_alloc_get(sk) && !atm_may_send(vcc, size)) {
 		pr_debug("Sorry: wmem_alloc = %d, size = %d, sndbuf = %d\n",
 			 sk_wmem_alloc_get(sk), size, sk->sk_sndbuf);
Index: linux-3.6.6/net/atm/proc.c
===================================================================
--- linux-3.6.6.orig/net/atm/proc.c	2012-11-05 09:57:06.000000000 +0100
+++ linux-3.6.6/net/atm/proc.c	2012-11-08 23:09:41.159841940 +0100
@@ -154,7 +154,7 @@
 static void pvc_info(struct seq_file *seq, struct atm_vcc *vcc)
 {
 	static const char *const class_name[] = {
-		"off", "UBR", "CBR", "VBR", "ABR"};
+		"off","UBR","CBR","NTR-VBR","ABR","ANY","RT-VBR","UBR+","GFR"};
 	static const char *const aal_name[] = {
 		"---",	"1",	"2",	"3/4",	/*  0- 3 */
 		"???",	"5",	"???",	"???",	/*  4- 7 */
