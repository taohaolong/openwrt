--- a/arch/mips/bcm63xx/boards/board_bcm963xx.c
+++ b/arch/mips/bcm63xx/boards/board_bcm963xx.c
@@ -331,29 +331,28 @@ static struct board_info __initdata boar
 
 	.leds = {
 		{
-			.name		= "adsl-fail",
-			.gpio		= 2,
+			.name		= "line1",
+			.gpio		= 4,
 			.active_low	= 1,
 		},
 		{
-			.name		= "ppp",
-			.gpio		= 3,
+			.name		= "line2",
+			.gpio		= 5,
 			.active_low	= 1,
 		},
 		{
-			.name		= "ppp-fail",
-			.gpio		= 4,
+			.name		= "line3",
+			.gpio		= 6,
 			.active_low	= 1,
 		},
 		{
-			.name		= "power",
-			.gpio		= 0,
+			.name		= "tel",
+			.gpio		= 7,
 			.active_low	= 1,
-			.default_trigger = "default-on",
 		},
 		{
-			.name		= "stop",
-			.gpio		= 1,
+			.name		= "eth",
+			.gpio		= 35,
 			.active_low	= 1,
 		},
 	},
@@ -855,6 +854,7 @@ static struct platform_device bcm63xx_gp
 int __init board_register_devices(void)
 {
 	u32 val;
+	int led_count = 0;
 	int button_count = 0;
 
 	if (board.has_pccard)
@@ -902,7 +902,11 @@ int __init board_register_devices(void)
 
 	platform_device_register_simple("GPIODEV", 0, &gpiodev_resource, 1);
 
-	bcm63xx_led_data.num_leds = ARRAY_SIZE(board.leds);
+	/* count number of LEDs defined by this device */
+	while (led_count < ARRAY_SIZE(board.leds) && board.leds[led_count].name)
+		led_count++;
+
+	bcm63xx_led_data.num_leds = led_count;
 	bcm63xx_led_data.leds = board.leds;
 
 	platform_device_register(&bcm63xx_gpio_leds);
