Index: linux-2.6.23.11-armeb/arch/arm/mach-ixp4xx/nslu2-setup.c
===================================================================
--- linux-2.6.23.11-armeb.orig/arch/arm/mach-ixp4xx/nslu2-setup.c	2007-12-29 01:46:05.000000000 -0600
+++ linux-2.6.23.11-armeb/arch/arm/mach-ixp4xx/nslu2-setup.c	2007-12-29 12:21:29.000000000 -0600
@@ -24,6 +24,7 @@
 #include <asm/mach/arch.h>
 #include <asm/mach/flash.h>
 #include <asm/mach/time.h>
+#include <asm/io.h>
 
 static struct flash_platform_data nslu2_flash_data = {
 	.map_name		= "cfi_probe",
@@ -193,6 +194,9 @@
 
 static void __init nslu2_init(void)
 {
+	uint8_t __iomem *f;
+	int i;
+
 	ixp4xx_sys_init();
 
 	nslu2_flash_resource.start = IXP4XX_EXP_BUS_BASE(0);
@@ -209,6 +213,33 @@
 	(void)platform_device_register(&nslu2_uart);
 
 	platform_add_devices(nslu2_devices, ARRAY_SIZE(nslu2_devices));
+
+
+	/*
+	 * Map in a portion of the flash and read the MAC address.
+	 * Since it is stored in BE in the flash itself, we need to
+	 * byteswap it if we're in LE mode.
+	 */
+	if ((f = ioremap(IXP4XX_EXP_BUS_BASE(0), 0x40000))) {
+#ifdef __ARMEB__
+		for (i = 0; i < 6; i++) {
+			nslu2_plat_eth[0].hwaddr[i] = readb(f + 0x3FFB0 + i);
+		}
+#else
+		nslu2_plat_eth[0].hwaddr[0] = readb(f + 0x3FFB0 + 3);
+		nslu2_plat_eth[0].hwaddr[1] = readb(f + 0x3FFB0 + 2);
+		nslu2_plat_eth[0].hwaddr[2] = readb(f + 0x3FFB0 + 1);
+		nslu2_plat_eth[0].hwaddr[3] = readb(f + 0x3FFB0 + 0);
+		nslu2_plat_eth[0].hwaddr[4] = readb(f + 0x3FFB0 + 7);
+		nslu2_plat_eth[0].hwaddr[5] = readb(f + 0x3FFB0 + 6);
+#endif
+		iounmap(f);
+	}
+	printk(KERN_INFO "NSLU2: Using MAC address %.2x:%.2x:%.2x:%.2x:%.2x:%.2x for port 0\n",
+	       nslu2_plat_eth[0].hwaddr[0], nslu2_plat_eth[0].hwaddr[1],
+	       nslu2_plat_eth[0].hwaddr[2], nslu2_plat_eth[0].hwaddr[3],
+	       nslu2_plat_eth[0].hwaddr[4], nslu2_plat_eth[0].hwaddr[5]);
+
 }
 
 MACHINE_START(NSLU2, "Linksys NSLU2")
