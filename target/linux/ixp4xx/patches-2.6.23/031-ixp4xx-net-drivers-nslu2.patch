Index: linux-2.6.23.12-armeb/arch/arm/mach-ixp4xx/nslu2-setup.c
===================================================================
--- linux-2.6.23.12-armeb.orig/arch/arm/mach-ixp4xx/nslu2-setup.c	2008-01-08 15:28:13.000000000 +1030
+++ linux-2.6.23.12-armeb/arch/arm/mach-ixp4xx/nslu2-setup.c	2008-01-08 15:28:32.000000000 +1030
@@ -24,6 +24,7 @@
 #include <asm/mach/arch.h>
 #include <asm/mach/flash.h>
 #include <asm/mach/time.h>
+#include <asm/io.h>
 
 static struct flash_platform_data nslu2_flash_data = {
 	.map_name		= "cfi_probe",
@@ -140,6 +141,23 @@
 	.resource		= nslu2_uart_resources,
 };
 
+/* Built-in 10/100 Ethernet MAC interfaces */
+static struct eth_plat_info nslu2_plat_eth[] = {
+	{
+		.phy		= 1,
+		.rxq		= 3,
+		.txreadyq	= 20,
+	}
+};
+
+static struct platform_device nslu2_eth[] = {
+	{
+		.name			= "ixp4xx_eth",
+		.id			= IXP4XX_ETH_NPEB,
+		.dev.platform_data	= nslu2_plat_eth,
+	}
+};
+
 static struct platform_device *nslu2_devices[] __initdata = {
 	&nslu2_i2c_gpio,
 	&nslu2_flash,
@@ -147,6 +165,7 @@
 #ifdef CONFIG_LEDS_IXP4XX
 	&nslu2_leds,
 #endif
+	&nslu2_eth[0],
 };
 
 static void nslu2_power_off(void)
@@ -175,6 +194,9 @@
 
 static void __init nslu2_init(void)
 {
+	uint8_t __iomem *f;
+	int i;
+
 	ixp4xx_sys_init();
 
 	nslu2_flash_resource.start = IXP4XX_EXP_BUS_BASE(0);
@@ -191,6 +213,33 @@
 	(void)platform_device_register(&nslu2_uart);
 
 	platform_add_devices(nslu2_devices, ARRAY_SIZE(nslu2_devices));
+
+
+	/*
+	 * Map in a portion of the flash and read the MAC address.
+	 * Since it is stored in BE in the flash itself, we need to
+	 * byteswap it if we're in LE mode.
+	 */
+	if ((f = ioremap(IXP4XX_EXP_BUS_BASE(0), 0x40000))) {
+#ifdef __ARMEB__
+		for (i = 0; i < 6; i++) {
+			nslu2_plat_eth[0].hwaddr[i] = readb(f + 0x3FFB0 + i);
+		}
+#else
+		nslu2_plat_eth[0].hwaddr[0] = readb(f + 0x3FFB0 + 3);
+		nslu2_plat_eth[0].hwaddr[1] = readb(f + 0x3FFB0 + 2);
+		nslu2_plat_eth[0].hwaddr[2] = readb(f + 0x3FFB0 + 1);
+		nslu2_plat_eth[0].hwaddr[3] = readb(f + 0x3FFB0 + 0);
+		nslu2_plat_eth[0].hwaddr[4] = readb(f + 0x3FFB0 + 7);
+		nslu2_plat_eth[0].hwaddr[5] = readb(f + 0x3FFB0 + 6);
+#endif
+		iounmap(f);
+	}
+	printk(KERN_INFO "NSLU2: Using MAC address %.2x:%.2x:%.2x:%.2x:%.2x:%.2x for port 0\n",
+	       nslu2_plat_eth[0].hwaddr[0], nslu2_plat_eth[0].hwaddr[1],
+	       nslu2_plat_eth[0].hwaddr[2], nslu2_plat_eth[0].hwaddr[3],
+	       nslu2_plat_eth[0].hwaddr[4], nslu2_plat_eth[0].hwaddr[5]);
+
 }
 
 MACHINE_START(NSLU2, "Linksys NSLU2")
